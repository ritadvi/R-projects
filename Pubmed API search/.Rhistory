#install the RISmed package
install.packages("RISmed")
library(RISmed)
library(tidyverse)
# Use getwd() to check current working directory
# Import data from input.csv
# Leave a header for the column name Genes / Proteins
data <- read.csv(file = 'input.csv', TRUE, ",", stringsAsFactors = FALSE)
# For each gene / protein
for (value in 1:nrow(data)){
# Concatenate (paste) gene / protein + CFTR
searchKey = paste(data[value,1],"%26CFTR")
# Print Query
cat(value," )",data[value,1],"CFTR","\n",file="outfile.txt",append=TRUE)
# Query PubMed
res <- EUtilsSummary(searchKey, type='esearch', db='pubmed')
# Print results
cat("Results:",attr(res,'count'),"\n\n",file="outfile.txt",append=TRUE)
# If Count Results > 0 print Ids
if(attr(res,'count')>0){
# If results > 20, show only top 20
if(length(attr(res,'PMID'))>20){
cat("Latest 20 Article Ids:",attr(res,'PMID')[1:20],"\n",file="outfile.txt",sep="\n",append=TRUE)
}
# Else, if results < 20 show all
else {
cat("Article Ids:",attr(res,'PMID'),"\n",file="outfile.txt",sep="\n",append=TRUE)
}
}
}
install.packages("RISmed")
# Iris dataset
str(iris)
# Iris dataset
data = str(iris)
class(data)
delete data
iris
SW.vers <- iris$Sepal.Width[iris$Species=="versicolor"]
hist(SW.vers)
SW.vers <- iris$Sepal.Width
hist(SW.vers)
qt(1-0.025, 49)
qt(0.025, 49)
-qt(1-0.025, 49)
qt(1-0.025,49)
mean(SW.vers)
sd(SW.vers)
SW.vers <- iris$Sepal.Width[iris$Species=="versicolor"]
mean(SW.vers)
sd(SW.vers)
nrows(iris)
class(iris)
nrows(SW)
# Import data from input.csv
# Leave a header for the column name Genes / Proteins
data <- read.csv(file = 'input.csv', TRUE, ",", stringsAsFactors = FALSE)
# For each gene / protein
for (value in 1:nrow(data)){
# Concatenate (paste) gene / protein + CFTR
searchKey = paste(data[value,1],"%26CFTR")
# Print Query
cat(value," )",data[value,1],"CFTR","\n",file="outfile.txt",append=TRUE)
# Query PubMed
res <- EUtilsSummary(searchKey, type='esearch', db='pubmed')
# Print results
cat("Results:",attr(res,'count'),"\n\n",file="outfile.txt",append=TRUE)
# If Count Results > 0 print Ids
if(attr(res,'count')>0){
# If results > 20, show only top 20
if(length(attr(res,'PMID'))>20){
cat("Latest 20 Article Ids:",attr(res,'PMID')[1:20],"\n",file="outfile.txt",sep="\n",append=TRUE)
}
# Else, if results < 20 show all
else {
cat("Article Ids:",attr(res,'PMID'),"\n",file="outfile.txt",sep="\n",append=TRUE)
}
}
}
data <- read.csv(file = 'input.csv', TRUE, ",", stringsAsFactors = FALSE)
setwd("~/R-projects/Pubmed API search")
# Import data from input.csv
setwd("~/R-projects/Pubmed API search")
# Leave a header for the column name Genes / Proteins
data <- read.csv(file = 'input.csv', TRUE, ",", stringsAsFactors = FALSE)
# For each gene / protein
for (value in 1:nrow(data)){
# Concatenate (paste) gene / protein + CFTR
searchKey = paste(data[value,1],"%26CFTR")
# Print Query
cat(value," )",data[value,1],"CFTR","\n",file="outfile.txt",append=TRUE)
# Query PubMed
res <- EUtilsSummary(searchKey, type='esearch', db='pubmed')
# Print results
cat("Results:",attr(res,'count'),"\n\n",file="outfile.txt",append=TRUE)
# If Count Results > 0 print Ids
if(attr(res,'count')>0){
# If results > 20, show only top 20
if(length(attr(res,'PMID'))>20){
cat("Latest 20 Article Ids:",attr(res,'PMID')[1:20],"\n",file="outfile.txt",sep="\n",append=TRUE)
}
# Else, if results < 20 show all
else {
cat("Article Ids:",attr(res,'PMID'),"\n",file="outfile.txt",sep="\n",append=TRUE)
}
}
}
SW
SW.vers
class(SW.vers)
len(SW.vers)
length(SW.vers)
(2.77 - 2.85) / (0.3137983 / sqrt(50))
-1.802704
t.test(SW.vers, alternative="less", mu=2.85)
str(iris)
iris$Petal.length<-as.factor(iris$Petal.length)
